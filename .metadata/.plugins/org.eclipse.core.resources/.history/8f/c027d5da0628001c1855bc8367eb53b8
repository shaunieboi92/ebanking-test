package com.ebanking.transactions.util;

import java.io.InputStreamReader;
import java.math.BigDecimal;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.Map;

import org.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Component;
import org.springframework.web.client.HttpServerErrorException;
import org.springframework.web.client.RestTemplate;

import com.ebanking.common.util.JsonUtils;
import com.ebanking.transactions.kafka.Producer;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;

@Component
public class ConversionRateUtil {

	@Value("${conversion.rate.url}")
	private String currencyConvUrl;

	private static final Logger logger = LoggerFactory
			.getLogger(Producer.class);

	RestTemplate restTemplate = new RestTemplate();

	private final String currencyConvMap = "";

	public String convertCurrency(String fromCurrency, String toCurrency,
			BigDecimal amount)
			throws JsonMappingException, JsonProcessingException {
		String rslt = "";
		String conversion = null;
		HttpHeaders headers = new HttpHeaders();
		headers.setContentType(MediaType.APPLICATION_JSON);
		try {
			String resp = restTemplate
					.getForObject(currencyConvUrl + toCurrency, String.class);
			JSONObject jsonObj = new JSONObject(resp);
			Map<String, Object> respMap = JsonUtils.toJson(resp);
			@SuppressWarnings("unchecked")
			Map<String, Object> conversionRateMap = (Map<String, Object>) respMap
					.get("conversion_rates");
			conversion = String.valueOf((Long) conversionRateMap.get("SGD"));

		} catch (HttpServerErrorException e) {
			logger.debug("HttpServer Exception:" + e.getMessage());
		}
		return conversion;
	}
}
